@model TutoringMarket.WebIdentity.Models.ViewModels.StatisticsModel
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
<div>
    <label>Abteilung mit den meisten Tutoren: @Model.DepartmentWithMostTutors</label> <br />
    <label>Anzahl an Tutoren gesamt: @Model.TutorsCount</label> <br />
    <label>Tutoren mit Bild: @Model.TutorsWithImagePercentage %</label> <br /> <br />
    <label>Anzahl an Bewertungen (gesamt): @Model.ReviewsCount</label> <br />
    <label>Durchschnittswert aller Bewertungen: @Model.ReviewsAverage</label> <br />
    <label>Durchschnittsanzahl an Bewertungen pro Tutor: @Model.ReviewPerTutor</label> <br /> <br />
    <label>Anzahl der versendeten Anfragen: @Model.RequestCount</label> <br />
    <label>Klassen, die am meisten Anfragen versendet haben (Top 5):</label> <br />
    <ol>
        @foreach (var item in Model.TopFiveRequestingClasses)
        {
            <li>@item.Name</li>
            <br />
        }
    </ol> <br />
    <label>Tutor, der am öftesten angefragt wird: @Model.MostRequestedTutor.FirstName @Model.MostRequestedTutor.LastName, @Model.MostRequestedTutor.Class.Name </label> <br />
    <label>Lehrer, der die meisten Kommentarre abgegeben hat: @Model.TeacherWithMostComments</label> <br />
</div>
<div id="tutorsPerClassChartContainer" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="tutorsPerGenderChartContainer" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="monthsWithRequestsChartContainer" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="requestsOnTutorWithImageChartContainer" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="acceptedTutorsChartContainer" style="width: 45%; height: 300px;display: inline-block;"></div>
<div id="acceptedReviewsChartContainer" style="width: 45%; height: 300px;display: inline-block;"></div>

<script type="text/javascript">

    window.onload = function () {
        var tutorperclasschart = new CanvasJS.Chart("tutorsPerClassChartContainer", {
            theme: "theme2",
            animationEnabled: true,
            title: {
                text: "Tutoren pro Klasse"
            },
            data: [
                {
                    type: "column",
                    dataPoints:  @Html.Raw(ViewBag.TutorsPerClassDataPoints),
                }
            ]
        });
        var tutorspergenderchart = new CanvasJS.Chart("tutorsPerGenderChartContainer", {
            theme: "theme2",
            animationEnabled: true,
            title: {
                text: "Tutoren pro Geschlecht"
            },
            data: [
                {                    type: "pie",
                    dataPoints:  @Html.Raw(ViewBag.TutorsPerGenderDataPoints),
                }
            ]
        });
        var monthsWithRequestsChart = new CanvasJS.Chart("monthsWithRequestsChartContainer", {
            theme: "theme2",
            animationEnabled: true,
            title: {
                text: "Anfragen pro Monat"
            },
            data: [
                {                    type: "column",
                    dataPoints:  @Html.Raw(ViewBag.MonthsWithRequestsDataPoints),
                }
            ]
        });
        var requestsOnTutorWithImageChart = new CanvasJS.Chart("requestsOnTutorWithImageChartContainer", {
            theme: "theme2",
            animationEnabled: true,
            title: {
                text: "Anfragen an Tutoren mit Bild in Prozent"
            },
            data: [
                {                    type: "pie",
                    dataPoints:  @Html.Raw(ViewBag.RequestsOnTutorsWithImagePercentageDataPoints),
                }
            ]
        });
        var acceptedTutorsChart = new CanvasJS.Chart("acceptedTutorsChartContainer", {
            theme: "theme2",
            animationEnabled: true,
            title: {
                text: "Akzeptierte / Abgelehnte Tutoren"
            },
            data: [
                {                    type: "doughnut",
                    dataPoints:  @Html.Raw(ViewBag.AcceptedTutors),
                }
            ]
        });
        var acceptedReviewsChart = new CanvasJS.Chart("acceptedReviewsChartContainer", {
            theme: "theme2",
            animationEnabled: true,
            title: {
                text: "Akzeptierte / Abgelehnte Bewertungen"
            },
            data: [
                {                    type: "doughnut",
                    dataPoints:  @Html.Raw(ViewBag.AcceptedReviews),
                }
            ]
        });

        tutorperclasschart.render();

        tutorspergenderchart.render();

        monthsWithRequestsChart.render();

        requestsOnTutorWithImageChart.render();

        acceptedTutorsChart.render();

        acceptedReviewsChart.render();
};
</script>